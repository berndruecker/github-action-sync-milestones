"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Camunda8 = void 0;
const admin_1 = require("../admin");
const lib_1 = require("../lib");
const modeler_1 = require("../modeler");
const oauth_1 = require("../oauth");
const operate_1 = require("../operate");
const optimize_1 = require("../optimize");
const tasklist_1 = require("../tasklist");
const zeebe_1 = require("../zeebe");
/**
 * A single point of configuration for all Camunda Platform 8 clients.
 *
 * This class is a facade for all the clients in the Camunda Platform 8 SDK.
 *
 * @example
 * ```typescript
 * import { Camunda8 } from '@camunda8/sdk'
 *
 * const c8 = new Camunda8()
 * const zeebe = c8.getZeebeGrpcApiClient()
 * const operate = c8.getOperateApiClient()
 * const optimize = c8.getOptimizeApiClient()
 * const tasklist = c8.getTasklistApiClient()
 * const modeler = c8.getModelerApiClient()
 * const admin = c8.getAdminApiClient()
 * ```
 */
class Camunda8 {
    constructor(config = {}) {
        this.configuration =
            lib_1.CamundaEnvironmentConfigurator.mergeConfigWithEnvironment(config);
        // Respect Oauth disabled flag
        if (!this.configuration.CAMUNDA_OAUTH_DISABLED) {
            this.oAuthProvider = new oauth_1.OAuthProvider({ config: this.configuration });
        }
    }
    getOperateApiClient() {
        if (!this.operateApiClient) {
            this.operateApiClient = new operate_1.OperateApiClient({
                config: this.configuration,
                oAuthProvider: this.oAuthProvider,
            });
        }
        return this.operateApiClient;
    }
    getAdminApiClient() {
        if (!this.adminApiClient) {
            this.adminApiClient = new admin_1.AdminApiClient({
                config: this.configuration,
                oAuthProvider: this.oAuthProvider,
            });
        }
        return this.adminApiClient;
    }
    getModelerApiClient() {
        if (!this.modelerApiClient) {
            this.modelerApiClient = new modeler_1.ModelerApiClient({
                config: this.configuration,
                oAuthProvider: this.oAuthProvider,
            });
        }
        return this.modelerApiClient;
    }
    getOptimizeApiClient() {
        if (!this.optimizeApiClient) {
            this.optimizeApiClient = new optimize_1.OptimizeApiClient({
                config: this.configuration,
                oAuthProvider: this.oAuthProvider,
            });
        }
        return this.optimizeApiClient;
    }
    getTasklistApiClient() {
        if (!this.tasklistApiClient) {
            this.tasklistApiClient = new tasklist_1.TasklistApiClient({
                config: this.configuration,
                oAuthProvider: this.oAuthProvider,
            });
        }
        return this.tasklistApiClient;
    }
    getZeebeGrpcApiClient() {
        if (!this.zeebeGrpcApiClient) {
            this.zeebeGrpcApiClient = new zeebe_1.ZeebeGrpcClient({
                config: this.configuration,
                oAuthProvider: this.oAuthProvider,
            });
        }
        return this.zeebeGrpcApiClient;
    }
}
exports.Camunda8 = Camunda8;
//# sourceMappingURL=index.js.map